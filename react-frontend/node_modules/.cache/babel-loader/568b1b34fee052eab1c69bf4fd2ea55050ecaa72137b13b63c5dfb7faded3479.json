{"ast":null,"code":"var _jsxFileName = \"/home/connor/home/CSC424/web_app/react-frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport { Routes, Route, Link } from \"react-router-dom\";\nimport { ProtectedRoute } from \"./utils/ProtectedRoute\";\nimport { Landing } from \"./Landing\";\nimport { Home } from \"./Home\";\nimport { fakeAuth } from \"./utils/FakeAuth\";\nimport React, { useState } from \"react\";\nimport { AuthProvider } from \"./context/AuthProvider\";\nimport { useAuth } from \"./context/AuthProvider\";\n\n// export const AuthContext = React.createContext(null);  // we will use this in other components\n\n// const App = () => {\n//     // const [user, setUser] = useState(0);\n//     // const handleLogin = () => setUser({ id: \"1\", name: \"bj\" });\n//     // const handleLogout = () => setUser(null);\n//     const [token, setToken] = React.useState(null);\n//     const handleLogin = async () => {\n//         const tokenToSet = await fakeAuth();\n//         setToken(tokenToSet);\n\n//     };\n\n//     const handleLogout = () => {\n//         setToken(null);\n//     };\n//     return (\n//       <>\n//        <AuthContext.Provider value={token}>\n//        <h1>React Router</h1>\n//        <Navigation />\n//        {/* if the user is not null, then we have the sign out button */}\n//        {/* else we have the sign in button */}\n//        {token ? (\n//          <button onClick={handleLogout}>Sign Out</button>\n//         ) : (\n//          <button onClick={handleLogin}>Sign In</button>\n//         )}\n\n//       <Routes>\n//         <Route index element={<Home onLogin={handleLogin} />} />\n//         <Route path=\"landing\" element={<Landing />} />\n//         <Route path=\"home\" element={ <Home onLogin={handleLogin} />} />\n//         {/* <Route path=\"*\" element={<p>There's nothing here: 404!</p>} /> */}\n\n//         {/* <Route index element={<Landing />} />\n//         <Route \n//             path=\"home\" \n//             element={ \n//             <ProtectedRoute user={user}> \n//                 <Home /> \n//             </ProtectedRoute> \n//             }\n//         />\n//         <Route path=\"landing\" element={<Landing />} />\n//         <Route path=\"*\" element={<p>There's nothing here: 404!</p>} /> */}\n//       </Routes>\n//       </AuthContext.Provider>\n//     </>\n//   );\n// };\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(AuthProvider, {\n      children: [/*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"React Router\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          index: true,\n          element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 39\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"landing\",\n          element: /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n            children: /*#__PURE__*/_jsxDEV(Landing, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 23\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"home\",\n          element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 45\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"*\",\n          element: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"There's nothing here: 404!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 42\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_c = App;\nconst Navigation = () => {\n  _s();\n  const {\n    value\n  } = useAuth();\n  return /*#__PURE__*/_jsxDEV(\"nav\", {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/home\",\n      children: \"Home\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/landing\",\n      children: \"Landing\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }, this), value.token && /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: value.onLogout,\n      children: \"Sign Out\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 7\n  }, this);\n};\n\n// const Navigation = ({ token, onLogout }) => (\n//     <nav>\n//         <Link to=\"/landing\">Landing</Link>\n//         {token && (\n//             <button type=\"button\" onClick={onLogout}>\n//                 Sign Out\n//             </button>\n//         )}  \n//         <Link to=\"/home\">Home</Link>\n\n//     </nav>\n// );\n_s(Navigation, \"9nD3haZiBXRtEj9C5aZm+1CM+T0=\", false, function () {\n  return [useAuth];\n});\n_c2 = Navigation;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"Navigation\");","map":{"version":3,"names":["Routes","Route","Link","ProtectedRoute","Landing","Home","fakeAuth","React","useState","AuthProvider","useAuth","App","Navigation","value","token","onLogout"],"sources":["/home/connor/home/CSC424/web_app/react-frontend/src/App.js"],"sourcesContent":["import { Routes, Route, Link } from \"react-router-dom\";\nimport { ProtectedRoute } from \"./utils/ProtectedRoute\";\nimport {Landing} from \"./Landing\";\nimport {Home} from \"./Home\"\nimport { fakeAuth } from \"./utils/FakeAuth\";\nimport React, { useState } from \"react\";\nimport { AuthProvider } from \"./context/AuthProvider\";\nimport { useAuth } from \"./context/AuthProvider\";\n\n// export const AuthContext = React.createContext(null);  // we will use this in other components\n\n\n\n// const App = () => {\n//     // const [user, setUser] = useState(0);\n//     // const handleLogin = () => setUser({ id: \"1\", name: \"bj\" });\n//     // const handleLogout = () => setUser(null);\n//     const [token, setToken] = React.useState(null);\n//     const handleLogin = async () => {\n//         const tokenToSet = await fakeAuth();\n//         setToken(tokenToSet);\n\n//     };\n\n//     const handleLogout = () => {\n//         setToken(null);\n//     };\n//     return (\n//       <>\n//        <AuthContext.Provider value={token}>\n//        <h1>React Router</h1>\n//        <Navigation />\n//        {/* if the user is not null, then we have the sign out button */}\n//        {/* else we have the sign in button */}\n//        {token ? (\n//          <button onClick={handleLogout}>Sign Out</button>\n//         ) : (\n//          <button onClick={handleLogin}>Sign In</button>\n//         )}\n     \n      \n            \n//       <Routes>\n//         <Route index element={<Home onLogin={handleLogin} />} />\n//         <Route path=\"landing\" element={<Landing />} />\n//         <Route path=\"home\" element={ <Home onLogin={handleLogin} />} />\n//         {/* <Route path=\"*\" element={<p>There's nothing here: 404!</p>} /> */}\n\n//         {/* <Route index element={<Landing />} />\n//         <Route \n//             path=\"home\" \n//             element={ \n//             <ProtectedRoute user={user}> \n//                 <Home /> \n//             </ProtectedRoute> \n//             }\n//         />\n//         <Route path=\"landing\" element={<Landing />} />\n//         <Route path=\"*\" element={<p>There's nothing here: 404!</p>} /> */}\n//       </Routes>\n//       </AuthContext.Provider>\n//     </>\n//   );\n// };\n\nconst App = () => {\n    return (\n        <>\n            <AuthProvider>\n            <Navigation />\n            \n            <h1>React Router</h1>\n        \n            <Routes>\n                <Route index element={<Home />} />\n                <Route\n                    path=\"landing\"\n                    element={\n                      <ProtectedRoute>\n                        <Landing />\n                      </ProtectedRoute>\n                    }\n                    />\n                <Route path=\"home\" element={<Home />} />\n                <Route path=\"*\" element={<p>There's nothing here: 404!</p>} />\n            </Routes>\n            </AuthProvider>\n        </>\n    );\n};\n\nconst Navigation = () => {\n    const { value } = useAuth();\n    return (\n      <nav>\n        <Link to=\"/home\">Home</Link>\n        <Link to=\"/landing\">Landing</Link>\n        {value.token && (\n          <button type=\"button\" onClick={value.onLogout}>\n            Sign Out\n            </button>\n        )}  \n        \n    </nav>\n);\n};\n\n\n// const Navigation = ({ token, onLogout }) => (\n//     <nav>\n//         <Link to=\"/landing\">Landing</Link>\n//         {token && (\n//             <button type=\"button\" onClick={onLogout}>\n//                 Sign Out\n//             </button>\n//         )}  \n//         <Link to=\"/home\">Home</Link>\n        \n//     </nav>\n// );\n\n\n\nexport default App;"],"mappings":";;AAAA,SAASA,MAAM,EAAEC,KAAK,EAAEC,IAAI,QAAQ,kBAAkB;AACtD,SAASC,cAAc,QAAQ,wBAAwB;AACvD,SAAQC,OAAO,QAAO,WAAW;AACjC,SAAQC,IAAI,QAAO,QAAQ;AAC3B,SAASC,QAAQ,QAAQ,kBAAkB;AAC3C,OAAOC,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,YAAY,QAAQ,wBAAwB;AACrD,SAASC,OAAO,QAAQ,wBAAwB;;AAEhD;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAEA,MAAMC,GAAG,GAAG,MAAM;EACd,oBACI;IAAA,uBACI,QAAC,YAAY;MAAA,wBACb,QAAC,UAAU;QAAA;QAAA;QAAA;MAAA,QAAG,eAEd;QAAA,UAAI;MAAY;QAAA;QAAA;QAAA;MAAA,QAAK,eAErB,QAAC,MAAM;QAAA,wBACH,QAAC,KAAK;UAAC,KAAK;UAAC,OAAO,eAAE,QAAC,IAAI;YAAA;YAAA;YAAA;UAAA;QAAI;UAAA;UAAA;UAAA;QAAA,QAAG,eAClC,QAAC,KAAK;UACF,IAAI,EAAC,SAAS;UACd,OAAO,eACL,QAAC,cAAc;YAAA,uBACb,QAAC,OAAO;cAAA;cAAA;cAAA;YAAA;UAAG;YAAA;YAAA;YAAA;UAAA;QAEd;UAAA;UAAA;UAAA;QAAA,QACC,eACN,QAAC,KAAK;UAAC,IAAI,EAAC,MAAM;UAAC,OAAO,eAAE,QAAC,IAAI;YAAA;YAAA;YAAA;UAAA;QAAI;UAAA;UAAA;UAAA;QAAA,QAAG,eACxC,QAAC,KAAK;UAAC,IAAI,EAAC,GAAG;UAAC,OAAO,eAAE;YAAA,UAAG;UAA0B;YAAA;YAAA;YAAA;UAAA;QAAK;UAAA;UAAA;UAAA;QAAA,QAAG;MAAA;QAAA;QAAA;QAAA;MAAA,QACzD;IAAA;MAAA;MAAA;MAAA;IAAA;EACM,iBAChB;AAEX,CAAC;AAAC,KAxBIA,GAAG;AA0BT,MAAMC,UAAU,GAAG,MAAM;EAAA;EACrB,MAAM;IAAEC;EAAM,CAAC,GAAGH,OAAO,EAAE;EAC3B,oBACE;IAAA,wBACE,QAAC,IAAI;MAAC,EAAE,EAAC,OAAO;MAAA,UAAC;IAAI;MAAA;MAAA;MAAA;IAAA,QAAO,eAC5B,QAAC,IAAI;MAAC,EAAE,EAAC,UAAU;MAAA,UAAC;IAAO;MAAA;MAAA;MAAA;IAAA,QAAO,EACjCG,KAAK,CAACC,KAAK,iBACV;MAAQ,IAAI,EAAC,QAAQ;MAAC,OAAO,EAAED,KAAK,CAACE,QAAS;MAAA,UAAC;IAE7C;MAAA;MAAA;MAAA;IAAA,QACH;EAAA;IAAA;IAAA;IAAA;EAAA,QAEC;AAEV,CAAC;;AAGD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AAAA,GA5BMH,UAAU;EAAA,QACMF,OAAO;AAAA;AAAA,MADvBE,UAAU;AAgChB,eAAeD,GAAG;AAAC;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}