{"ast":null,"code":"var _jsxFileName = \"/home/connor/home/CSC424/web_app/react-frontend/src/App.js\";\nimport { Routes, Route, Link } from \"react-router-dom\";\nimport { ProtectedRoute } from \"./utils/ProtectedRoute\";\nimport { Landing } from \"./Landing\";\nimport { Home } from \"./Home\";\nimport { fakeAuth } from \"./utils/FakeAuth\";\nimport React, { useState } from \"react\";\nimport { AuthProvider } from \"./context/AuthProvider\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/React.createContext(null); // we will use this in other components\n\n// const App = () => {\n//     // const [user, setUser] = useState(0);\n//     // const handleLogin = () => setUser({ id: \"1\", name: \"bj\" });\n//     // const handleLogout = () => setUser(null);\n//     const [token, setToken] = React.useState(null);\n//     const handleLogin = async () => {\n//         const tokenToSet = await fakeAuth();\n//         setToken(tokenToSet);\n\n//     };\n\n//     const handleLogout = () => {\n//         setToken(null);\n//     };\n//     return (\n//       <>\n//        <AuthContext.Provider value={token}>\n//        <h1>React Router</h1>\n//        <Navigation />\n//        {/* if the user is not null, then we have the sign out button */}\n//        {/* else we have the sign in button */}\n//        {token ? (\n//          <button onClick={handleLogout}>Sign Out</button>\n//         ) : (\n//          <button onClick={handleLogin}>Sign In</button>\n//         )}\n\n//       <Routes>\n//         <Route index element={<Home onLogin={handleLogin} />} />\n//         <Route path=\"landing\" element={<Landing />} />\n//         <Route path=\"home\" element={ <Home onLogin={handleLogin} />} />\n//         {/* <Route path=\"*\" element={<p>There's nothing here: 404!</p>} /> */}\n\n//         {/* <Route index element={<Landing />} />\n//         <Route \n//             path=\"home\" \n//             element={ \n//             <ProtectedRoute user={user}> \n//                 <Home /> \n//             </ProtectedRoute> \n//             }\n//         />\n//         <Route path=\"landing\" element={<Landing />} />\n//         <Route path=\"*\" element={<p>There's nothing here: 404!</p>} /> */}\n//       </Routes>\n//       </AuthContext.Provider>\n//     </>\n//   );\n// };\n\n// const App = () => {\n//     return (\n//         <>\n//             <AuthProvider>\n//             <Navigation />\n\n//             <h1>React Router</h1>\n\n//             <Routes>\n//                 <Route index element={<Home />} />\n//                 <Route path=\"landing\" element={<Landing />} />\n//                 <Route path=\"home\" element={<Home />} />\n//                 <Route path=\"*\" element={<p>There's nothing here: 404!</p>} />\n//             </Routes>\n//             </AuthProvider>\n//         </>\n//     );\n// };\n\nconst Navigation = () => {\n  const {\n    value\n  } = AuthProvider();\n  return /*#__PURE__*/_jsxDEV(\"nav\", {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/home\",\n      children: \"Home\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/landing\",\n      children: \"Landing\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }, this), value.token && /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: value.onLogout,\n      children: \"Sign Out\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/home\",\n      children: \"Home\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 7\n  }, this);\n};\n\n// const Navigation = ({ token, onLogout }) => (\n//     <nav>\n//         <Link to=\"/landing\">Landing</Link>\n//         {token && (\n//             <button type=\"button\" onClick={onLogout}>\n//                 Sign Out\n//             </button>\n//         )}  \n//         <Link to=\"/home\">Home</Link>\n\n//     </nav>\n// );\n_c = Navigation;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"Navigation\");","map":{"version":3,"names":["Routes","Route","Link","ProtectedRoute","Landing","Home","fakeAuth","React","useState","AuthProvider","AuthContext","createContext","Navigation","value","token","onLogout","App"],"sources":["/home/connor/home/CSC424/web_app/react-frontend/src/App.js"],"sourcesContent":["import { Routes, Route, Link } from \"react-router-dom\";\nimport { ProtectedRoute } from \"./utils/ProtectedRoute\";\nimport {Landing} from \"./Landing\";\nimport {Home} from \"./Home\"\nimport { fakeAuth } from \"./utils/FakeAuth\";\nimport React, { useState } from \"react\";\nimport { AuthProvider } from \"./context/AuthProvider\";\n\nexport const AuthContext = React.createContext(null);  // we will use this in other components\n\n\n\n// const App = () => {\n//     // const [user, setUser] = useState(0);\n//     // const handleLogin = () => setUser({ id: \"1\", name: \"bj\" });\n//     // const handleLogout = () => setUser(null);\n//     const [token, setToken] = React.useState(null);\n//     const handleLogin = async () => {\n//         const tokenToSet = await fakeAuth();\n//         setToken(tokenToSet);\n\n//     };\n\n//     const handleLogout = () => {\n//         setToken(null);\n//     };\n//     return (\n//       <>\n//        <AuthContext.Provider value={token}>\n//        <h1>React Router</h1>\n//        <Navigation />\n//        {/* if the user is not null, then we have the sign out button */}\n//        {/* else we have the sign in button */}\n//        {token ? (\n//          <button onClick={handleLogout}>Sign Out</button>\n//         ) : (\n//          <button onClick={handleLogin}>Sign In</button>\n//         )}\n     \n      \n            \n//       <Routes>\n//         <Route index element={<Home onLogin={handleLogin} />} />\n//         <Route path=\"landing\" element={<Landing />} />\n//         <Route path=\"home\" element={ <Home onLogin={handleLogin} />} />\n//         {/* <Route path=\"*\" element={<p>There's nothing here: 404!</p>} /> */}\n\n//         {/* <Route index element={<Landing />} />\n//         <Route \n//             path=\"home\" \n//             element={ \n//             <ProtectedRoute user={user}> \n//                 <Home /> \n//             </ProtectedRoute> \n//             }\n//         />\n//         <Route path=\"landing\" element={<Landing />} />\n//         <Route path=\"*\" element={<p>There's nothing here: 404!</p>} /> */}\n//       </Routes>\n//       </AuthContext.Provider>\n//     </>\n//   );\n// };\n\n// const App = () => {\n//     return (\n//         <>\n//             <AuthProvider>\n//             <Navigation />\n            \n//             <h1>React Router</h1>\n        \n//             <Routes>\n//                 <Route index element={<Home />} />\n//                 <Route path=\"landing\" element={<Landing />} />\n//                 <Route path=\"home\" element={<Home />} />\n//                 <Route path=\"*\" element={<p>There's nothing here: 404!</p>} />\n//             </Routes>\n//             </AuthProvider>\n//         </>\n//     );\n// };\n\nconst Navigation = () => {\n    const { value } = AuthProvider();\n    return (\n      <nav>\n        <Link to=\"/home\">Home</Link>\n        <Link to=\"/landing\">Landing</Link>\n        {value.token && (\n          <button type=\"button\" onClick={value.onLogout}>\n            Sign Out\n            </button>\n        )}  \n        <Link to=\"/home\">Home</Link>\n        \n    </nav>\n);\n};\n\n\n// const Navigation = ({ token, onLogout }) => (\n//     <nav>\n//         <Link to=\"/landing\">Landing</Link>\n//         {token && (\n//             <button type=\"button\" onClick={onLogout}>\n//                 Sign Out\n//             </button>\n//         )}  \n//         <Link to=\"/home\">Home</Link>\n        \n//     </nav>\n// );\n\n\n\nexport default App;"],"mappings":";AAAA,SAASA,MAAM,EAAEC,KAAK,EAAEC,IAAI,QAAQ,kBAAkB;AACtD,SAASC,cAAc,QAAQ,wBAAwB;AACvD,SAAQC,OAAO,QAAO,WAAW;AACjC,SAAQC,IAAI,QAAO,QAAQ;AAC3B,SAASC,QAAQ,QAAQ,kBAAkB;AAC3C,OAAOC,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,YAAY,QAAQ,wBAAwB;AAAC;AAEtD,OAAO,MAAMC,WAAW,gBAAGH,KAAK,CAACI,aAAa,CAAC,IAAI,CAAC,CAAC,CAAE;;AAIvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,UAAU,GAAG,MAAM;EACrB,MAAM;IAAEC;EAAM,CAAC,GAAGJ,YAAY,EAAE;EAChC,oBACE;IAAA,wBACE,QAAC,IAAI;MAAC,EAAE,EAAC,OAAO;MAAA,UAAC;IAAI;MAAA;MAAA;MAAA;IAAA,QAAO,eAC5B,QAAC,IAAI;MAAC,EAAE,EAAC,UAAU;MAAA,UAAC;IAAO;MAAA;MAAA;MAAA;IAAA,QAAO,EACjCI,KAAK,CAACC,KAAK,iBACV;MAAQ,IAAI,EAAC,QAAQ;MAAC,OAAO,EAAED,KAAK,CAACE,QAAS;MAAA,UAAC;IAE7C;MAAA;MAAA;MAAA;IAAA,QACH,eACD,QAAC,IAAI;MAAC,EAAE,EAAC,OAAO;MAAA,UAAC;IAAI;MAAA;MAAA;MAAA;IAAA,QAAO;EAAA;IAAA;IAAA;IAAA;EAAA,QAE1B;AAEV,CAAC;;AAGD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AAAA,KA7BMH,UAAU;AAiChB,eAAeI,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}